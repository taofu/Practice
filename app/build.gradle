apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "com.practice.justkeep.practice"
        minSdkVersion 8
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('C:/Users/taofu/.android/debug.keystore')
        }

    }

    buildTypes {
       /* release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
*/
        myBuildType {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
    sourceSets{
        myBuildType.java.srcDirs = ['src/testmytype/java']
    }
    flavorDimensions "version","abi"
    productFlavors{

        freeapp {
            flavorDimension "version"
            applicationId "com.practice.justkeep.practice.version.free"
        }
        x86 {
            flavorDimension "abi"
            applicationId "com.practice.justkeep.practice.abi.free"
        }

    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.2'
}


class  Person{
    def static method(){
        def methodClosure = {
            println "static methodClosure this:" +this.getClass().name
            println "static methodClosure owner:"+owner.getClass().name
            println "static methodClosure delegate:"+delegate.getClass().name
        }
        methodClosure
    }
    def static staticClassInstanceClosure = {
        println "staticClassInstanceClosure this:"+this.getClass().name
        println "staticClassInstanceClosure owner:"+owner.getClass().name
        println "staticClassInstanceClosure delegate:"+delegate.getClass().name
    }
    def classInstanceClosure = {
        println "classInstanceClosure this:"+this.getClass().name
        println "classInstanceClosure owner:"+owner.getClass().name
        println "classInstanceClosure delegate:"+delegate.getClass().name
    }


}

def sciptClosure = {
    println "sciptClosure this:"+this.getClass().name
    println "sciptClosure owner:"+owner.getClass().name
    println "sciptClosure delegate:"+delegate.getClass().name

    def innerClosure = {
        println "innerClosure this:"+this.getClass().name
        println "innerClosure owner:"+owner.getClass().name
        println "innerClosure delegate:"+delegate.getClass().name
    }
    innerClosure.call()
}

def testClosure = { number ->

     number + "haha you are comed"

}

task test1 <<{
    println  testClosure (44444)
}

task test <<{
    Person.method().call()
    println('----------------------------')
    Person.staticClassInstanceClosure.call()
    println('----------------------------')
    new Person().classInstanceClosure.call()
    println('----------------------------')
    sciptClosure.call()
}


